### Generic application configuration

quarkus.application.name=quarkus
quarkus.application.version=1.0.0

# The thread pool is configured with an upper limit of the queue size to prevent resource exhaustion on long request
# processing.
quarkus.thread-pool.core-threads=20
quarkus.thread-pool.max-threads=256
quarkus.thread-pool.queue-size=128


### HTTP configuration

quarkus.resteasy-reactive.path=/api
quarkus.http.non-application-root-path=${quarkus.http.root-path}

# See quarkus.http.compress-media-types for response types to which compression is applied.
quarkus.http.enable-compression=true

# Access to any endpoint is denied per default.
# Each endpoint must have a PermitAll annotation or a RolesAllowed annotation.
quarkus.security.jaxrs.deny-unannotated-endpoints=true

# Proactive authentication (https://quarkus.io/guides/security-built-in-authentication-support-concept#proactive-authentication)
# is disabled such that only endpoints with security annotations are checked for authentication.
quarkus.http.auth.proactive=false


### Security

mp.jwt.verify.publickey.location=${sample.jwks.url}/.well-known/jwks.json
quarkus.smallrye-jwt.blocking-authentication=true


### Health configuration

# The readiness checks for extensions such as the database are disabled. It is good practice to use only checks for
# components that are specific to a single container and to avoid checks on shared components such as a database.
# If the database gets unreachable, this check would deactivate all running containers and thus make the entire
# application unreachable.
quarkus.health.extensions.enabled=false


### Logging configuration

# Logs are produced in ECS JSON format.
quarkus.log.json.log-format=ecs
quarkus.log.json.fields.timestamp.zone-id=Z
quarkus.log.json.fields.mdc.enabled=true
quarkus.log.json.fields.mdc.field-name=labels
quarkus.log.json.additional-field."service.name".value=${quarkus.application.name}
quarkus.log.json.additional-field."service.version".value=${quarkus.application.version}

### Database configuration

quarkus.datasource.db-kind=postgresql
quarkus.datasource.health.enabled=false
quarkus.datasource.metrics.enabled=true
quarkus.datasource.jdbc.enable-metrics=true
quarkus.datasource.jdbc.initial-size=2
quarkus.datasource.jdbc.min-size=2
quarkus.datasource.jdbc.max-size=50
quarkus.datasource.jdbc.acquisition-timeout=PT10S
quarkus.datasource.jdbc.background-validation-interval=PT2M
quarkus.datasource.jdbc.foreground-validation-interval=PT1M
quarkus.datasource.jdbc.idle-removal-interval=PT5M
quarkus.datasource.jdbc.leak-detection-interval=PT1M
quarkus.datasource.jdbc.max-lifetime=PT12H
